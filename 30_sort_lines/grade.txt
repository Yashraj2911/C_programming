Grading at Wed Jul 22 10:34:45 UTC 2020
Attempting to compile sortLines.c
#################################################
testcase1:
testcase1 passed, your program successfully indicated a failure
  - Valgrind reported errors
valgrind was not clean
==173== Memcheck, a memory error detector
==173== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==173== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==173== 
==173== Parent PID: 172
==173== 
==173== 
==173== HEAP SUMMARY:
==173==     in use at exit: 22 bytes in 5 blocks
==173==   total heap usage: 20 allocs, 15 frees, 10,198 bytes allocated
==173== 
==173== 22 bytes in 5 blocks are definitely lost in loss record 1 of 1
==173==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==173==    by 0x400AE9: read (in /graderhome/work/30_sort_lines/sortLines)
==173==    by 0x400CCC: main (in /graderhome/work/30_sort_lines/sortLines)
==173== 
==173== LEAK SUMMARY:
==173==    definitely lost: 22 bytes in 5 blocks
==173==    indirectly lost: 0 bytes in 0 blocks
==173==      possibly lost: 0 bytes in 0 blocks
==173==    still reachable: 0 bytes in 0 blocks
==173==         suppressed: 0 bytes in 0 blocks
==173== 
==173== For counts of detected and suppressed errors, rerun with: -v
==173== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
#################################################
testcase2:
Your output is correct
  - Valgrind was clean (no errors, no memory leaks)
valgrind was clean
#################################################
testcase3:
Your output is correct
  - Valgrind reported errors
valgrind was not clean
==204== Memcheck, a memory error detector
==204== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==204== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==204== 
==204== Parent PID: 203
==204== 
==204== 
==204== HEAP SUMMARY:
==204==     in use at exit: 22 bytes in 5 blocks
==204==   total heap usage: 19 allocs, 14 frees, 9,646 bytes allocated
==204== 
==204== 22 bytes in 5 blocks are definitely lost in loss record 1 of 1
==204==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==204==    by 0x400AE9: read (in /graderhome/work/30_sort_lines/sortLines)
==204==    by 0x400CCC: main (in /graderhome/work/30_sort_lines/sortLines)
==204== 
==204== LEAK SUMMARY:
==204==    definitely lost: 22 bytes in 5 blocks
==204==    indirectly lost: 0 bytes in 0 blocks
==204==      possibly lost: 0 bytes in 0 blocks
==204==    still reachable: 0 bytes in 0 blocks
==204==         suppressed: 0 bytes in 0 blocks
==204== 
==204== For counts of detected and suppressed errors, rerun with: -v
==204== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
#################################################
testcase4:
Your output is correct
  - Valgrind reported errors
valgrind was not clean
==221== Memcheck, a memory error detector
==221== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==221== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==221== 
==221== Parent PID: 220
==221== 
==221== 
==221== HEAP SUMMARY:
==221==     in use at exit: 73 bytes in 11 blocks
==221==   total heap usage: 40 allocs, 29 frees, 15,401 bytes allocated
==221== 
==221== 73 bytes in 11 blocks are definitely lost in loss record 1 of 1
==221==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==221==    by 0x400AE9: read (in /graderhome/work/30_sort_lines/sortLines)
==221==    by 0x400CCC: main (in /graderhome/work/30_sort_lines/sortLines)
==221== 
==221== LEAK SUMMARY:
==221==    definitely lost: 73 bytes in 11 blocks
==221==    indirectly lost: 0 bytes in 0 blocks
==221==      possibly lost: 0 bytes in 0 blocks
==221==    still reachable: 0 bytes in 0 blocks
==221==         suppressed: 0 bytes in 0 blocks
==221== 
==221== For counts of detected and suppressed errors, rerun with: -v
==221== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Overall Grade: B
