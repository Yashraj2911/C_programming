Grading at Fri Jul  3 11:01:28 UTC 2020
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==568== Memcheck, a memory error detector
==568== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==568== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==568== Command: ./test-eval inp.1.txt
==568== Parent PID: 567
==568== 
==568== Conditional jump or move depends on uninitialised value(s)
==568==    at 0x401549: flush_suit (eval.c:33)
==568==    by 0x402A8E: describe_hand (test-eval.c:36)
==568==    by 0x402EE6: main (test-eval.c:116)
==568== 
==568== Conditional jump or move depends on uninitialised value(s)
==568==    at 0x401549: flush_suit (eval.c:33)
==568==    by 0x402411: evaluate_hand (eval.c:315)
==568==    by 0x402CBB: describe_hand (test-eval.c:68)
==568==    by 0x402EE6: main (test-eval.c:116)
==568== 
==568== Conditional jump or move depends on uninitialised value(s)
==568==    at 0x401549: flush_suit (eval.c:33)
==568==    by 0x402A8E: describe_hand (test-eval.c:36)
==568==    by 0x402F06: main (test-eval.c:119)
==568== 
==568== Conditional jump or move depends on uninitialised value(s)
==568==    at 0x401549: flush_suit (eval.c:33)
==568==    by 0x402411: evaluate_hand (eval.c:315)
==568==    by 0x402CBB: describe_hand (test-eval.c:68)
==568==    by 0x402F06: main (test-eval.c:119)
==568== 
==568== Conditional jump or move depends on uninitialised value(s)
==568==    at 0x401549: flush_suit (eval.c:33)
==568==    by 0x402411: evaluate_hand (eval.c:315)
==568==    by 0x401D7B: compare_hands (eval.c:158)
==568==    by 0x402F5B: main (test-eval.c:124)
==568== 
==568== Conditional jump or move depends on uninitialised value(s)
==568==    at 0x401549: flush_suit (eval.c:33)
==568==    by 0x402411: evaluate_hand (eval.c:315)
==568==    by 0x401DD6: compare_hands (eval.c:159)
==568==    by 0x402F5B: main (test-eval.c:124)
==568== 
==568== 
==568== HEAP SUMMARY:
==568==     in use at exit: 0 bytes in 0 blocks
==568==   total heap usage: 278 allocs, 278 frees, 13,728 bytes allocated
==568== 
==568== All heap blocks were freed -- no leaks are possible
==568== 
==568== For counts of detected and suppressed errors, rerun with: -v
==568== Use --track-origins=yes to see where uninitialised values come from
==568== ERROR SUMMARY: 68 errors from 6 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
Valgrind returned an error status
==573== Memcheck, a memory error detector
==573== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==573== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==573== Command: ./test-eval inp.2.txt
==573== Parent PID: 572
==573== 
==573== Conditional jump or move depends on uninitialised value(s)
==573==    at 0x401549: flush_suit (eval.c:33)
==573==    by 0x402A8E: describe_hand (test-eval.c:36)
==573==    by 0x402EE6: main (test-eval.c:116)
==573== 
==573== Conditional jump or move depends on uninitialised value(s)
==573==    at 0x401549: flush_suit (eval.c:33)
==573==    by 0x402411: evaluate_hand (eval.c:315)
==573==    by 0x402CBB: describe_hand (test-eval.c:68)
==573==    by 0x402EE6: main (test-eval.c:116)
==573== 
==573== Conditional jump or move depends on uninitialised value(s)
==573==    at 0x401549: flush_suit (eval.c:33)
==573==    by 0x402A8E: describe_hand (test-eval.c:36)
==573==    by 0x402F06: main (test-eval.c:119)
==573== 
==573== Conditional jump or move depends on uninitialised value(s)
==573==    at 0x401549: flush_suit (eval.c:33)
==573==    by 0x402411: evaluate_hand (eval.c:315)
==573==    by 0x402CBB: describe_hand (test-eval.c:68)
==573==    by 0x402F06: main (test-eval.c:119)
==573== 
==573== Conditional jump or move depends on uninitialised value(s)
==573==    at 0x401549: flush_suit (eval.c:33)
==573==    by 0x402411: evaluate_hand (eval.c:315)
==573==    by 0x401D7B: compare_hands (eval.c:158)
==573==    by 0x402F5B: main (test-eval.c:124)
==573== 
==573== Conditional jump or move depends on uninitialised value(s)
==573==    at 0x401549: flush_suit (eval.c:33)
==573==    by 0x402411: evaluate_hand (eval.c:315)
==573==    by 0x401DD6: compare_hands (eval.c:159)
==573==    by 0x402F5B: main (test-eval.c:124)
==573== 
==573== 
==573== HEAP SUMMARY:
==573==     in use at exit: 0 bytes in 0 blocks
==573==   total heap usage: 232 allocs, 232 frees, 13,028 bytes allocated
==573== 
==573== All heap blocks were freed -- no leaks are possible
==573== 
==573== For counts of detected and suppressed errors, rerun with: -v
==573== Use --track-origins=yes to see where uninitialised values come from
==573== ERROR SUMMARY: 56 errors from 6 contexts (suppressed: 0 from 0)
Testcase 3: Trying hands with 2 pairs
Valgrind returned an error status
==578== Memcheck, a memory error detector
==578== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==578== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==578== Command: ./test-eval inp.3.txt
==578== Parent PID: 577
==578== 
==578== Conditional jump or move depends on uninitialised value(s)
==578==    at 0x401549: flush_suit (eval.c:33)
==578==    by 0x402A8E: describe_hand (test-eval.c:36)
==578==    by 0x402EE6: main (test-eval.c:116)
==578== 
==578== Conditional jump or move depends on uninitialised value(s)
==578==    at 0x401549: flush_suit (eval.c:33)
==578==    by 0x402411: evaluate_hand (eval.c:315)
==578==    by 0x402CBB: describe_hand (test-eval.c:68)
==578==    by 0x402EE6: main (test-eval.c:116)
==578== 
==578== Conditional jump or move depends on uninitialised value(s)
==578==    at 0x401549: flush_suit (eval.c:33)
==578==    by 0x402A8E: describe_hand (test-eval.c:36)
==578==    by 0x402F06: main (test-eval.c:119)
==578== 
==578== Conditional jump or move depends on uninitialised value(s)
==578==    at 0x401549: flush_suit (eval.c:33)
==578==    by 0x402411: evaluate_hand (eval.c:315)
==578==    by 0x402CBB: describe_hand (test-eval.c:68)
==578==    by 0x402F06: main (test-eval.c:119)
==578== 
==578== Conditional jump or move depends on uninitialised value(s)
==578==    at 0x401549: flush_suit (eval.c:33)
==578==    by 0x402411: evaluate_hand (eval.c:315)
==578==    by 0x401D7B: compare_hands (eval.c:158)
==578==    by 0x402F5B: main (test-eval.c:124)
==578== 
==578== Conditional jump or move depends on uninitialised value(s)
==578==    at 0x401549: flush_suit (eval.c:33)
==578==    by 0x402411: evaluate_hand (eval.c:315)
==578==    by 0x401DD6: compare_hands (eval.c:159)
==578==    by 0x402F5B: main (test-eval.c:124)
==578== 
==578== 
==578== HEAP SUMMARY:
==578==     in use at exit: 0 bytes in 0 blocks
==578==   total heap usage: 544 allocs, 544 frees, 18,344 bytes allocated
==578== 
==578== All heap blocks were freed -- no leaks are possible
==578== 
==578== For counts of detected and suppressed errors, rerun with: -v
==578== Use --track-origins=yes to see where uninitialised values come from
==578== ERROR SUMMARY: 127 errors from 6 contexts (suppressed: 0 from 0)
Testcase 4: Trying hands with 3 of a kind
Valgrind returned an error status
==583== Memcheck, a memory error detector
==583== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==583== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==583== Command: ./test-eval inp.4.txt
==583== Parent PID: 582
==583== 
==583== Conditional jump or move depends on uninitialised value(s)
==583==    at 0x401549: flush_suit (eval.c:33)
==583==    by 0x402A8E: describe_hand (test-eval.c:36)
==583==    by 0x402EE6: main (test-eval.c:116)
==583== 
==583== Conditional jump or move depends on uninitialised value(s)
==583==    at 0x401549: flush_suit (eval.c:33)
==583==    by 0x402411: evaluate_hand (eval.c:315)
==583==    by 0x402CBB: describe_hand (test-eval.c:68)
==583==    by 0x402EE6: main (test-eval.c:116)
==583== 
==583== Conditional jump or move depends on uninitialised value(s)
==583==    at 0x401549: flush_suit (eval.c:33)
==583==    by 0x402A8E: describe_hand (test-eval.c:36)
==583==    by 0x402F06: main (test-eval.c:119)
==583== 
==583== Conditional jump or move depends on uninitialised value(s)
==583==    at 0x401549: flush_suit (eval.c:33)
==583==    by 0x402411: evaluate_hand (eval.c:315)
==583==    by 0x402CBB: describe_hand (test-eval.c:68)
==583==    by 0x402F06: main (test-eval.c:119)
==583== 
==583== Conditional jump or move depends on uninitialised value(s)
==583==    at 0x401549: flush_suit (eval.c:33)
==583==    by 0x402411: evaluate_hand (eval.c:315)
==583==    by 0x401D7B: compare_hands (eval.c:158)
==583==    by 0x402F5B: main (test-eval.c:124)
==583== 
==583== Conditional jump or move depends on uninitialised value(s)
==583==    at 0x401549: flush_suit (eval.c:33)
==583==    by 0x402411: evaluate_hand (eval.c:315)
==583==    by 0x401DD6: compare_hands (eval.c:159)
==583==    by 0x402F5B: main (test-eval.c:124)
==583== 
==583== 
==583== HEAP SUMMARY:
==583==     in use at exit: 0 bytes in 0 blocks
==583==   total heap usage: 352 allocs, 352 frees, 15,296 bytes allocated
==583== 
==583== All heap blocks were freed -- no leaks are possible
==583== 
==583== For counts of detected and suppressed errors, rerun with: -v
==583== Use --track-origins=yes to see where uninitialised values come from
==583== ERROR SUMMARY: 86 errors from 6 contexts (suppressed: 0 from 0)
Testcase 5: Trying hands with straights
Valgrind returned an error status
==588== Memcheck, a memory error detector
==588== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==588== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==588== Command: ./test-eval inp.5.txt
==588== Parent PID: 587
==588== 
==588== Conditional jump or move depends on uninitialised value(s)
==588==    at 0x401549: flush_suit (eval.c:33)
==588==    by 0x402A8E: describe_hand (test-eval.c:36)
==588==    by 0x402EE6: main (test-eval.c:116)
==588== 
==588== Conditional jump or move depends on uninitialised value(s)
==588==    at 0x401549: flush_suit (eval.c:33)
==588==    by 0x402411: evaluate_hand (eval.c:315)
==588==    by 0x402CBB: describe_hand (test-eval.c:68)
==588==    by 0x402EE6: main (test-eval.c:116)
==588== 
==588== Conditional jump or move depends on uninitialised value(s)
==588==    at 0x401549: flush_suit (eval.c:33)
==588==    by 0x402A8E: describe_hand (test-eval.c:36)
==588==    by 0x402F06: main (test-eval.c:119)
==588== 
==588== Conditional jump or move depends on uninitialised value(s)
==588==    at 0x401549: flush_suit (eval.c:33)
==588==    by 0x402411: evaluate_hand (eval.c:315)
==588==    by 0x402CBB: describe_hand (test-eval.c:68)
==588==    by 0x402F06: main (test-eval.c:119)
==588== 
==588== Conditional jump or move depends on uninitialised value(s)
==588==    at 0x401549: flush_suit (eval.c:33)
==588==    by 0x402411: evaluate_hand (eval.c:315)
==588==    by 0x401D7B: compare_hands (eval.c:158)
==588==    by 0x402F5B: main (test-eval.c:124)
==588== 
==588== Conditional jump or move depends on uninitialised value(s)
==588==    at 0x401549: flush_suit (eval.c:33)
==588==    by 0x402411: evaluate_hand (eval.c:315)
==588==    by 0x401DD6: compare_hands (eval.c:159)
==588==    by 0x402F5B: main (test-eval.c:124)
==588== 
==588== 
==588== HEAP SUMMARY:
==588==     in use at exit: 0 bytes in 0 blocks
==588==   total heap usage: 360 allocs, 360 frees, 15,704 bytes allocated
==588== 
==588== All heap blocks were freed -- no leaks are possible
==588== 
==588== For counts of detected and suppressed errors, rerun with: -v
==588== Use --track-origins=yes to see where uninitialised values come from
==588== ERROR SUMMARY: 77 errors from 6 contexts (suppressed: 0 from 0)
Testcase 6: Trying hands with flushes
Valgrind returned an error status
==593== Memcheck, a memory error detector
==593== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==593== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==593== Command: ./test-eval inp.6.txt
==593== Parent PID: 592
==593== 
==593== Conditional jump or move depends on uninitialised value(s)
==593==    at 0x401549: flush_suit (eval.c:33)
==593==    by 0x402A8E: describe_hand (test-eval.c:36)
==593==    by 0x402EE6: main (test-eval.c:116)
==593== 
==593== Conditional jump or move depends on uninitialised value(s)
==593==    at 0x401549: flush_suit (eval.c:33)
==593==    by 0x402411: evaluate_hand (eval.c:315)
==593==    by 0x402CBB: describe_hand (test-eval.c:68)
==593==    by 0x402EE6: main (test-eval.c:116)
==593== 
==593== Conditional jump or move depends on uninitialised value(s)
==593==    at 0x401549: flush_suit (eval.c:33)
==593==    by 0x402A8E: describe_hand (test-eval.c:36)
==593==    by 0x402F06: main (test-eval.c:119)
==593== 
==593== Conditional jump or move depends on uninitialised value(s)
==593==    at 0x401549: flush_suit (eval.c:33)
==593==    by 0x402411: evaluate_hand (eval.c:315)
==593==    by 0x402CBB: describe_hand (test-eval.c:68)
==593==    by 0x402F06: main (test-eval.c:119)
==593== 
==593== Conditional jump or move depends on uninitialised value(s)
==593==    at 0x401549: flush_suit (eval.c:33)
==593==    by 0x402411: evaluate_hand (eval.c:315)
==593==    by 0x401D7B: compare_hands (eval.c:158)
==593==    by 0x402F5B: main (test-eval.c:124)
==593== 
==593== Conditional jump or move depends on uninitialised value(s)
==593==    at 0x401549: flush_suit (eval.c:33)
==593==    by 0x402411: evaluate_hand (eval.c:315)
==593==    by 0x401DD6: compare_hands (eval.c:159)
==593==    by 0x402F5B: main (test-eval.c:124)
==593== 
==593== 
==593== HEAP SUMMARY:
==593==     in use at exit: 0 bytes in 0 blocks
==593==   total heap usage: 898 allocs, 898 frees, 25,784 bytes allocated
==593== 
==593== All heap blocks were freed -- no leaks are possible
==593== 
==593== For counts of detected and suppressed errors, rerun with: -v
==593== Use --track-origins=yes to see where uninitialised values come from
==593== ERROR SUMMARY: 18 errors from 6 contexts (suppressed: 0 from 0)
Testcase 7: Trying hands with full houses
Valgrind returned an error status
==598== Memcheck, a memory error detector
==598== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==598== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==598== Command: ./test-eval inp.7.txt
==598== Parent PID: 597
==598== 
==598== Conditional jump or move depends on uninitialised value(s)
==598==    at 0x401549: flush_suit (eval.c:33)
==598==    by 0x402A8E: describe_hand (test-eval.c:36)
==598==    by 0x402EE6: main (test-eval.c:116)
==598== 
==598== Conditional jump or move depends on uninitialised value(s)
==598==    at 0x401549: flush_suit (eval.c:33)
==598==    by 0x402411: evaluate_hand (eval.c:315)
==598==    by 0x402CBB: describe_hand (test-eval.c:68)
==598==    by 0x402EE6: main (test-eval.c:116)
==598== 
==598== Conditional jump or move depends on uninitialised value(s)
==598==    at 0x401549: flush_suit (eval.c:33)
==598==    by 0x402A8E: describe_hand (test-eval.c:36)
==598==    by 0x402F06: main (test-eval.c:119)
==598== 
==598== Conditional jump or move depends on uninitialised value(s)
==598==    at 0x401549: flush_suit (eval.c:33)
==598==    by 0x402411: evaluate_hand (eval.c:315)
==598==    by 0x402CBB: describe_hand (test-eval.c:68)
==598==    by 0x402F06: main (test-eval.c:119)
==598== 
==598== Conditional jump or move depends on uninitialised value(s)
==598==    at 0x401549: flush_suit (eval.c:33)
==598==    by 0x402411: evaluate_hand (eval.c:315)
==598==    by 0x401D7B: compare_hands (eval.c:158)
==598==    by 0x402F5B: main (test-eval.c:124)
==598== 
==598== Conditional jump or move depends on uninitialised value(s)
==598==    at 0x401549: flush_suit (eval.c:33)
==598==    by 0x402411: evaluate_hand (eval.c:315)
==598==    by 0x401DD6: compare_hands (eval.c:159)
==598==    by 0x402F5B: main (test-eval.c:124)
==598== 
==598== 
==598== HEAP SUMMARY:
==598==     in use at exit: 0 bytes in 0 blocks
==598==   total heap usage: 636 allocs, 636 frees, 21,404 bytes allocated
==598== 
==598== All heap blocks were freed -- no leaks are possible
==598== 
==598== For counts of detected and suppressed errors, rerun with: -v
==598== Use --track-origins=yes to see where uninitialised values come from
==598== ERROR SUMMARY: 132 errors from 6 contexts (suppressed: 0 from 0)
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==603== Memcheck, a memory error detector
==603== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==603== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==603== Command: ./test-eval inp.8.txt
==603== Parent PID: 602
==603== 
==603== Conditional jump or move depends on uninitialised value(s)
==603==    at 0x401549: flush_suit (eval.c:33)
==603==    by 0x402A8E: describe_hand (test-eval.c:36)
==603==    by 0x402EE6: main (test-eval.c:116)
==603== 
==603== Conditional jump or move depends on uninitialised value(s)
==603==    at 0x401549: flush_suit (eval.c:33)
==603==    by 0x402411: evaluate_hand (eval.c:315)
==603==    by 0x402CBB: describe_hand (test-eval.c:68)
==603==    by 0x402EE6: main (test-eval.c:116)
==603== 
==603== Conditional jump or move depends on uninitialised value(s)
==603==    at 0x401549: flush_suit (eval.c:33)
==603==    by 0x402A8E: describe_hand (test-eval.c:36)
==603==    by 0x402F06: main (test-eval.c:119)
==603== 
==603== Conditional jump or move depends on uninitialised value(s)
==603==    at 0x401549: flush_suit (eval.c:33)
==603==    by 0x402411: evaluate_hand (eval.c:315)
==603==    by 0x402CBB: describe_hand (test-eval.c:68)
==603==    by 0x402F06: main (test-eval.c:119)
==603== 
==603== Conditional jump or move depends on uninitialised value(s)
==603==    at 0x401549: flush_suit (eval.c:33)
==603==    by 0x402411: evaluate_hand (eval.c:315)
==603==    by 0x401D7B: compare_hands (eval.c:158)
==603==    by 0x402F5B: main (test-eval.c:124)
==603== 
==603== Conditional jump or move depends on uninitialised value(s)
==603==    at 0x401549: flush_suit (eval.c:33)
==603==    by 0x402411: evaluate_hand (eval.c:315)
==603==    by 0x401DD6: compare_hands (eval.c:159)
==603==    by 0x402F5B: main (test-eval.c:124)
==603== 
==603== 
==603== HEAP SUMMARY:
==603==     in use at exit: 0 bytes in 0 blocks
==603==   total heap usage: 352 allocs, 352 frees, 15,296 bytes allocated
==603== 
==603== All heap blocks were freed -- no leaks are possible
==603== 
==603== For counts of detected and suppressed errors, rerun with: -v
==603== Use --track-origins=yes to see where uninitialised values come from
==603== ERROR SUMMARY: 86 errors from 6 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
Valgrind returned an error status
==608== Memcheck, a memory error detector
==608== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==608== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==608== Command: ./test-eval inp.9.txt
==608== Parent PID: 607
==608== 
==608== Conditional jump or move depends on uninitialised value(s)
==608==    at 0x401549: flush_suit (eval.c:33)
==608==    by 0x402A8E: describe_hand (test-eval.c:36)
==608==    by 0x402F06: main (test-eval.c:119)
==608== 
==608== Conditional jump or move depends on uninitialised value(s)
==608==    at 0x401549: flush_suit (eval.c:33)
==608==    by 0x402411: evaluate_hand (eval.c:315)
==608==    by 0x402CBB: describe_hand (test-eval.c:68)
==608==    by 0x402F06: main (test-eval.c:119)
==608== 
==608== Conditional jump or move depends on uninitialised value(s)
==608==    at 0x401549: flush_suit (eval.c:33)
==608==    by 0x402411: evaluate_hand (eval.c:315)
==608==    by 0x401DD6: compare_hands (eval.c:159)
==608==    by 0x402F5B: main (test-eval.c:124)
==608== 
==608== 
==608== HEAP SUMMARY:
==608==     in use at exit: 0 bytes in 0 blocks
==608==   total heap usage: 282 allocs, 282 frees, 14,008 bytes allocated
==608== 
==608== All heap blocks were freed -- no leaks are possible
==608== 
==608== For counts of detected and suppressed errors, rerun with: -v
==608== Use --track-origins=yes to see where uninitialised values come from
==608== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==613== Memcheck, a memory error detector
==613== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==613== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==613== Command: ./test-eval inp.10.txt
==613== Parent PID: 612
==613== 
==613== Conditional jump or move depends on uninitialised value(s)
==613==    at 0x401549: flush_suit (eval.c:33)
==613==    by 0x402A8E: describe_hand (test-eval.c:36)
==613==    by 0x402F06: main (test-eval.c:119)
==613== 
==613== Conditional jump or move depends on uninitialised value(s)
==613==    at 0x401549: flush_suit (eval.c:33)
==613==    by 0x402411: evaluate_hand (eval.c:315)
==613==    by 0x402CBB: describe_hand (test-eval.c:68)
==613==    by 0x402F06: main (test-eval.c:119)
==613== 
==613== Conditional jump or move depends on uninitialised value(s)
==613==    at 0x401549: flush_suit (eval.c:33)
==613==    by 0x402411: evaluate_hand (eval.c:315)
==613==    by 0x401DD6: compare_hands (eval.c:159)
==613==    by 0x402F5B: main (test-eval.c:124)
==613== 
==613== Conditional jump or move depends on uninitialised value(s)
==613==    at 0x401549: flush_suit (eval.c:33)
==613==    by 0x402A8E: describe_hand (test-eval.c:36)
==613==    by 0x402EE6: main (test-eval.c:116)
==613== 
==613== Conditional jump or move depends on uninitialised value(s)
==613==    at 0x401549: flush_suit (eval.c:33)
==613==    by 0x402411: evaluate_hand (eval.c:315)
==613==    by 0x402CBB: describe_hand (test-eval.c:68)
==613==    by 0x402EE6: main (test-eval.c:116)
==613== 
==613== Conditional jump or move depends on uninitialised value(s)
==613==    at 0x401549: flush_suit (eval.c:33)
==613==    by 0x402411: evaluate_hand (eval.c:315)
==613==    by 0x401D7B: compare_hands (eval.c:158)
==613==    by 0x402F5B: main (test-eval.c:124)
==613== 
==613== 
==613== HEAP SUMMARY:
==613==     in use at exit: 0 bytes in 0 blocks
==613==   total heap usage: 3,988 allocs, 3,988 frees, 80,704 bytes allocated
==613== 
==613== All heap blocks were freed -- no leaks are possible
==613== 
==613== For counts of detected and suppressed errors, rerun with: -v
==613== Use --track-origins=yes to see where uninitialised values come from
==613== ERROR SUMMARY: 729 errors from 6 contexts (suppressed: 0 from 0)

Overall Grade: F
