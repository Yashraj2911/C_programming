Grading at Fri Jul  3 10:47:34 UTC 2020
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==153== Memcheck, a memory error detector
==153== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==153== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==153== Command: ./test-eval inp.1.txt
==153== Parent PID: 152
==153== 
==153== Conditional jump or move depends on uninitialised value(s)
==153==    at 0x40151A: flush_suit (eval.c:28)
==153==    by 0x402A5F: describe_hand (test-eval.c:36)
==153==    by 0x402EB7: main (test-eval.c:116)
==153== 
==153== Conditional jump or move depends on uninitialised value(s)
==153==    at 0x40151A: flush_suit (eval.c:28)
==153==    by 0x4023E2: evaluate_hand (eval.c:310)
==153==    by 0x402C8C: describe_hand (test-eval.c:68)
==153==    by 0x402EB7: main (test-eval.c:116)
==153== 
==153== Conditional jump or move depends on uninitialised value(s)
==153==    at 0x40151A: flush_suit (eval.c:28)
==153==    by 0x402A5F: describe_hand (test-eval.c:36)
==153==    by 0x402ED7: main (test-eval.c:119)
==153== 
==153== Conditional jump or move depends on uninitialised value(s)
==153==    at 0x40151A: flush_suit (eval.c:28)
==153==    by 0x4023E2: evaluate_hand (eval.c:310)
==153==    by 0x402C8C: describe_hand (test-eval.c:68)
==153==    by 0x402ED7: main (test-eval.c:119)
==153== 
==153== Conditional jump or move depends on uninitialised value(s)
==153==    at 0x40151A: flush_suit (eval.c:28)
==153==    by 0x4023E2: evaluate_hand (eval.c:310)
==153==    by 0x401D4C: compare_hands (eval.c:153)
==153==    by 0x402F2C: main (test-eval.c:124)
==153== 
==153== Conditional jump or move depends on uninitialised value(s)
==153==    at 0x40151A: flush_suit (eval.c:28)
==153==    by 0x4023E2: evaluate_hand (eval.c:310)
==153==    by 0x401DA7: compare_hands (eval.c:154)
==153==    by 0x402F2C: main (test-eval.c:124)
==153== 
==153== 
==153== HEAP SUMMARY:
==153==     in use at exit: 0 bytes in 0 blocks
==153==   total heap usage: 278 allocs, 278 frees, 13,728 bytes allocated
==153== 
==153== All heap blocks were freed -- no leaks are possible
==153== 
==153== For counts of detected and suppressed errors, rerun with: -v
==153== Use --track-origins=yes to see where uninitialised values come from
==153== ERROR SUMMARY: 38 errors from 6 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
Valgrind returned an error status
==158== Memcheck, a memory error detector
==158== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==158== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==158== Command: ./test-eval inp.2.txt
==158== Parent PID: 157
==158== 
==158== Conditional jump or move depends on uninitialised value(s)
==158==    at 0x40151A: flush_suit (eval.c:28)
==158==    by 0x402A5F: describe_hand (test-eval.c:36)
==158==    by 0x402EB7: main (test-eval.c:116)
==158== 
==158== Conditional jump or move depends on uninitialised value(s)
==158==    at 0x40151A: flush_suit (eval.c:28)
==158==    by 0x4023E2: evaluate_hand (eval.c:310)
==158==    by 0x402C8C: describe_hand (test-eval.c:68)
==158==    by 0x402EB7: main (test-eval.c:116)
==158== 
==158== Conditional jump or move depends on uninitialised value(s)
==158==    at 0x40151A: flush_suit (eval.c:28)
==158==    by 0x402A5F: describe_hand (test-eval.c:36)
==158==    by 0x402ED7: main (test-eval.c:119)
==158== 
==158== Conditional jump or move depends on uninitialised value(s)
==158==    at 0x40151A: flush_suit (eval.c:28)
==158==    by 0x4023E2: evaluate_hand (eval.c:310)
==158==    by 0x402C8C: describe_hand (test-eval.c:68)
==158==    by 0x402ED7: main (test-eval.c:119)
==158== 
==158== Conditional jump or move depends on uninitialised value(s)
==158==    at 0x40151A: flush_suit (eval.c:28)
==158==    by 0x4023E2: evaluate_hand (eval.c:310)
==158==    by 0x401D4C: compare_hands (eval.c:153)
==158==    by 0x402F2C: main (test-eval.c:124)
==158== 
==158== Conditional jump or move depends on uninitialised value(s)
==158==    at 0x40151A: flush_suit (eval.c:28)
==158==    by 0x4023E2: evaluate_hand (eval.c:310)
==158==    by 0x401DA7: compare_hands (eval.c:154)
==158==    by 0x402F2C: main (test-eval.c:124)
==158== 
==158== 
==158== HEAP SUMMARY:
==158==     in use at exit: 0 bytes in 0 blocks
==158==   total heap usage: 232 allocs, 232 frees, 13,028 bytes allocated
==158== 
==158== All heap blocks were freed -- no leaks are possible
==158== 
==158== For counts of detected and suppressed errors, rerun with: -v
==158== Use --track-origins=yes to see where uninitialised values come from
==158== ERROR SUMMARY: 32 errors from 6 contexts (suppressed: 0 from 0)
Testcase 3: Trying hands with 2 pairs
Valgrind returned an error status
==163== Memcheck, a memory error detector
==163== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==163== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==163== Command: ./test-eval inp.3.txt
==163== Parent PID: 162
==163== 
==163== Conditional jump or move depends on uninitialised value(s)
==163==    at 0x40151A: flush_suit (eval.c:28)
==163==    by 0x402A5F: describe_hand (test-eval.c:36)
==163==    by 0x402EB7: main (test-eval.c:116)
==163== 
==163== Conditional jump or move depends on uninitialised value(s)
==163==    at 0x40151A: flush_suit (eval.c:28)
==163==    by 0x4023E2: evaluate_hand (eval.c:310)
==163==    by 0x402C8C: describe_hand (test-eval.c:68)
==163==    by 0x402EB7: main (test-eval.c:116)
==163== 
==163== Conditional jump or move depends on uninitialised value(s)
==163==    at 0x40151A: flush_suit (eval.c:28)
==163==    by 0x402A5F: describe_hand (test-eval.c:36)
==163==    by 0x402ED7: main (test-eval.c:119)
==163== 
==163== Conditional jump or move depends on uninitialised value(s)
==163==    at 0x40151A: flush_suit (eval.c:28)
==163==    by 0x4023E2: evaluate_hand (eval.c:310)
==163==    by 0x402C8C: describe_hand (test-eval.c:68)
==163==    by 0x402ED7: main (test-eval.c:119)
==163== 
==163== Conditional jump or move depends on uninitialised value(s)
==163==    at 0x40151A: flush_suit (eval.c:28)
==163==    by 0x4023E2: evaluate_hand (eval.c:310)
==163==    by 0x401D4C: compare_hands (eval.c:153)
==163==    by 0x402F2C: main (test-eval.c:124)
==163== 
==163== Conditional jump or move depends on uninitialised value(s)
==163==    at 0x40151A: flush_suit (eval.c:28)
==163==    by 0x4023E2: evaluate_hand (eval.c:310)
==163==    by 0x401DA7: compare_hands (eval.c:154)
==163==    by 0x402F2C: main (test-eval.c:124)
==163== 
==163== 
==163== HEAP SUMMARY:
==163==     in use at exit: 0 bytes in 0 blocks
==163==   total heap usage: 544 allocs, 544 frees, 18,344 bytes allocated
==163== 
==163== All heap blocks were freed -- no leaks are possible
==163== 
==163== For counts of detected and suppressed errors, rerun with: -v
==163== Use --track-origins=yes to see where uninitialised values come from
==163== ERROR SUMMARY: 67 errors from 6 contexts (suppressed: 0 from 0)
Testcase 4: Trying hands with 3 of a kind
Valgrind returned an error status
==168== Memcheck, a memory error detector
==168== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==168== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==168== Command: ./test-eval inp.4.txt
==168== Parent PID: 167
==168== 
==168== Conditional jump or move depends on uninitialised value(s)
==168==    at 0x40151A: flush_suit (eval.c:28)
==168==    by 0x402A5F: describe_hand (test-eval.c:36)
==168==    by 0x402EB7: main (test-eval.c:116)
==168== 
==168== Conditional jump or move depends on uninitialised value(s)
==168==    at 0x40151A: flush_suit (eval.c:28)
==168==    by 0x4023E2: evaluate_hand (eval.c:310)
==168==    by 0x402C8C: describe_hand (test-eval.c:68)
==168==    by 0x402EB7: main (test-eval.c:116)
==168== 
==168== Conditional jump or move depends on uninitialised value(s)
==168==    at 0x40151A: flush_suit (eval.c:28)
==168==    by 0x402A5F: describe_hand (test-eval.c:36)
==168==    by 0x402ED7: main (test-eval.c:119)
==168== 
==168== Conditional jump or move depends on uninitialised value(s)
==168==    at 0x40151A: flush_suit (eval.c:28)
==168==    by 0x4023E2: evaluate_hand (eval.c:310)
==168==    by 0x402C8C: describe_hand (test-eval.c:68)
==168==    by 0x402ED7: main (test-eval.c:119)
==168== 
==168== Conditional jump or move depends on uninitialised value(s)
==168==    at 0x40151A: flush_suit (eval.c:28)
==168==    by 0x4023E2: evaluate_hand (eval.c:310)
==168==    by 0x401D4C: compare_hands (eval.c:153)
==168==    by 0x402F2C: main (test-eval.c:124)
==168== 
==168== Conditional jump or move depends on uninitialised value(s)
==168==    at 0x40151A: flush_suit (eval.c:28)
==168==    by 0x4023E2: evaluate_hand (eval.c:310)
==168==    by 0x401DA7: compare_hands (eval.c:154)
==168==    by 0x402F2C: main (test-eval.c:124)
==168== 
==168== 
==168== HEAP SUMMARY:
==168==     in use at exit: 0 bytes in 0 blocks
==168==   total heap usage: 352 allocs, 352 frees, 15,296 bytes allocated
==168== 
==168== All heap blocks were freed -- no leaks are possible
==168== 
==168== For counts of detected and suppressed errors, rerun with: -v
==168== Use --track-origins=yes to see where uninitialised values come from
==168== ERROR SUMMARY: 50 errors from 6 contexts (suppressed: 0 from 0)
Testcase 5: Trying hands with straights
Valgrind returned an error status
==173== Memcheck, a memory error detector
==173== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==173== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==173== Command: ./test-eval inp.5.txt
==173== Parent PID: 172
==173== 
==173== Conditional jump or move depends on uninitialised value(s)
==173==    at 0x40151A: flush_suit (eval.c:28)
==173==    by 0x402A5F: describe_hand (test-eval.c:36)
==173==    by 0x402EB7: main (test-eval.c:116)
==173== 
==173== Conditional jump or move depends on uninitialised value(s)
==173==    at 0x40151A: flush_suit (eval.c:28)
==173==    by 0x4023E2: evaluate_hand (eval.c:310)
==173==    by 0x402C8C: describe_hand (test-eval.c:68)
==173==    by 0x402EB7: main (test-eval.c:116)
==173== 
==173== Conditional jump or move depends on uninitialised value(s)
==173==    at 0x40151A: flush_suit (eval.c:28)
==173==    by 0x402A5F: describe_hand (test-eval.c:36)
==173==    by 0x402ED7: main (test-eval.c:119)
==173== 
==173== Conditional jump or move depends on uninitialised value(s)
==173==    at 0x40151A: flush_suit (eval.c:28)
==173==    by 0x4023E2: evaluate_hand (eval.c:310)
==173==    by 0x402C8C: describe_hand (test-eval.c:68)
==173==    by 0x402ED7: main (test-eval.c:119)
==173== 
==173== Conditional jump or move depends on uninitialised value(s)
==173==    at 0x40151A: flush_suit (eval.c:28)
==173==    by 0x4023E2: evaluate_hand (eval.c:310)
==173==    by 0x401D4C: compare_hands (eval.c:153)
==173==    by 0x402F2C: main (test-eval.c:124)
==173== 
==173== Conditional jump or move depends on uninitialised value(s)
==173==    at 0x40151A: flush_suit (eval.c:28)
==173==    by 0x4023E2: evaluate_hand (eval.c:310)
==173==    by 0x401DA7: compare_hands (eval.c:154)
==173==    by 0x402F2C: main (test-eval.c:124)
==173== 
==173== 
==173== HEAP SUMMARY:
==173==     in use at exit: 0 bytes in 0 blocks
==173==   total heap usage: 360 allocs, 360 frees, 15,704 bytes allocated
==173== 
==173== All heap blocks were freed -- no leaks are possible
==173== 
==173== For counts of detected and suppressed errors, rerun with: -v
==173== Use --track-origins=yes to see where uninitialised values come from
==173== ERROR SUMMARY: 41 errors from 6 contexts (suppressed: 0 from 0)
Testcase 6: Trying hands with flushes
 Checking the output 
Line_65_did_not_match
Line_73_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
As Kc Qs Js 0s 2s 						As Kc Qs Js 0s 2s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs Js 0s 2s 			 - 5 cards used for hand: As Qs Js 0s 2s 
Hand 2:								Hand 2:
--------							--------
As Ks Qc Js 0s 3s 						As Ks Qc Js 0s 3s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Ks Js 0s 3s 			 - 5 cards used for hand: As Ks Js 0s 3s 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kh Jh 9h 8s 4h 2h 						Kh Jh 9h 8s 4h 2h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kh Jh 9h 4h 2h 			 - 5 cards used for hand: Kh Jh 9h 4h 2h 
Hand 2:								Hand 2:
--------							--------
Qd 9d 7d 6c 5d 2d 						Qd 9d 7d 6c 5d 2d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value Q)	 - The most of a kind is 1 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Qd 9d 7d 5d 2d 			 - 5 cards used for hand: Qd 9d 7d 5d 2d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Jc 9c 7h 4c 3c 2h 						Kc Jc 9c 7h 4c 3c 2h 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kc Jc 9c 4c 3c 			 - 5 cards used for hand: Kc Jc 9c 4c 3c 
Hand 2:								Hand 2:
--------							--------
Kc Jc 9c 7h 4c 3h 2c 						Kc Jc 9c 7h 4c 3h 2c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kc Jc 9c 4c 2c 			 - 5 cards used for hand: Kc Jc 9c 4c 2c 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Qc Qs 7s 6s 3s 					      |	As Ac Qs Qc 7s 6s 3s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value Q)				 - Secondary pair at index 2 (value Q)
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs 7s 6s 3s 			 - 5 cards used for hand: As Qs 7s 6s 3s 
Hand 2:								Hand 2:
--------							--------
Kc Kh Ks 9h 7h 3h 2h 					      |	Ks Kh Kc 9h 7h 3h 2h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 3 of a kind (at index 0 / value K)	 - The most of a kind is 3 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kh 9h 7h 3h 2h 			 - 5 cards used for hand: Kh 9h 7h 3h 2h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 2h 						Ah Qh 0h 8h 6h 4h 2h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Kh Qh 0h 8h 6h 4h 2h 						Kh Qh 0h 8h 6h 4h 2h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kh Qh 0h 8h 6h 			 - 5 cards used for hand: Kh Qh 0h 8h 6h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ad Qd 0d 8d 6d 4d 						Ad Qd 0d 8d 6d 4d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ad Qd 0d 8d 6d 			 - 5 cards used for hand: Ad Qd 0d 8d 6d 
Hand 2:								Hand 2:
--------							--------
Ad Kd 0d 8d 6d 4d 						Ad Kd 0d 8d 6d 4d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ad Kd 0d 8d 6d 			 - 5 cards used for hand: Ad Kd 0d 8d 6d 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ad Qd 0d 8d 6d 4d 						Ad Qd 0d 8d 6d 4d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ad Qd 0d 8d 6d 			 - 5 cards used for hand: Ad Qd 0d 8d 6d 
Hand 2:								Hand 2:
--------							--------
Ad Jd 0d 8d 6d 4d 						Ad Jd 0d 8d 6d 4d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ad Jd 0d 8d 6d 			 - 5 cards used for hand: Ad Jd 0d 8d 6d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Qs 0s 8s 6s 4s 						As Qs 0s 8s 6s 4s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs 0s 8s 6s 			 - 5 cards used for hand: As Qs 0s 8s 6s 
Hand 2:								Hand 2:
--------							--------
As Qs Js 8s 6s 4s 						As Qs Js 8s 6s 4s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs Js 8s 6s 			 - 5 cards used for hand: As Qs Js 8s 6s 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Qs 0s 8s 6s 4s 						As Qs 0s 8s 6s 4s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs 0s 8s 6s 			 - 5 cards used for hand: As Qs 0s 8s 6s 
Hand 2:								Hand 2:
--------							--------
As Qs 9s 8s 6s 4s 						As Qs 9s 8s 6s 4s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs 9s 8s 6s 			 - 5 cards used for hand: As Qs 9s 8s 6s 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac Qc 0c 8c 6c 4c 						Ac Qc 0c 8c 6c 4c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ac Qc 0c 8c 6c 			 - 5 cards used for hand: Ac Qc 0c 8c 6c 
Hand 2:								Hand 2:
--------							--------
Ac Qc 0c 9c 6c 4c 						Ac Qc 0c 9c 6c 4c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ac Qc 0c 9c 6c 			 - 5 cards used for hand: Ac Qc 0c 9c 6c 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac Qc 0c 8c 6c 4c 						Ac Qc 0c 8c 6c 4c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ac Qc 0c 8c 6c 			 - 5 cards used for hand: Ac Qc 0c 8c 6c 
Hand 2:								Hand 2:
--------							--------
Ac Qc 0c 7c 6c 4c 						Ac Qc 0c 7c 6c 4c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ac Qc 0c 7c 6c 			 - 5 cards used for hand: Ac Qc 0c 7c 6c 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 						Ah Qh 0h 8h 6h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Ah Qh 0h 8h 7h 4h 						Ah Qh 0h 8h 7h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 7h 			 - 5 cards used for hand: Ah Qh 0h 8h 7h 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 						Ah Qh 0h 8h 6h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Ah Qh 0h 8h 5h 4h 						Ah Qh 0h 8h 5h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 5h 			 - 5 cards used for hand: Ah Qh 0h 8h 5h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 						Ah Qh 0h 8h 6h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Ah Qh 0h 8h 6h 5h 						Ah Qh 0h 8h 6h 5h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Comparison : 							Comparison : 
--------------							--------------
Tie								Tie
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 						Ah Qh 0h 8h 6h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Ah Qh 0h 8h 6h 3h 						Ah Qh 0h 8h 6h 3h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Comparison : 							Comparison : 
--------------							--------------
Tie								Tie
============================					============================
Testcase 7: Trying hands with full houses
Valgrind returned an error status
==191== Memcheck, a memory error detector
==191== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==191== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==191== Command: ./test-eval inp.7.txt
==191== Parent PID: 190
==191== 
==191== Conditional jump or move depends on uninitialised value(s)
==191==    at 0x40151A: flush_suit (eval.c:28)
==191==    by 0x402A5F: describe_hand (test-eval.c:36)
==191==    by 0x402EB7: main (test-eval.c:116)
==191== 
==191== Conditional jump or move depends on uninitialised value(s)
==191==    at 0x40151A: flush_suit (eval.c:28)
==191==    by 0x4023E2: evaluate_hand (eval.c:310)
==191==    by 0x402C8C: describe_hand (test-eval.c:68)
==191==    by 0x402EB7: main (test-eval.c:116)
==191== 
==191== Conditional jump or move depends on uninitialised value(s)
==191==    at 0x40151A: flush_suit (eval.c:28)
==191==    by 0x402A5F: describe_hand (test-eval.c:36)
==191==    by 0x402ED7: main (test-eval.c:119)
==191== 
==191== Conditional jump or move depends on uninitialised value(s)
==191==    at 0x40151A: flush_suit (eval.c:28)
==191==    by 0x4023E2: evaluate_hand (eval.c:310)
==191==    by 0x402C8C: describe_hand (test-eval.c:68)
==191==    by 0x402ED7: main (test-eval.c:119)
==191== 
==191== Conditional jump or move depends on uninitialised value(s)
==191==    at 0x40151A: flush_suit (eval.c:28)
==191==    by 0x4023E2: evaluate_hand (eval.c:310)
==191==    by 0x401D4C: compare_hands (eval.c:153)
==191==    by 0x402F2C: main (test-eval.c:124)
==191== 
==191== Conditional jump or move depends on uninitialised value(s)
==191==    at 0x40151A: flush_suit (eval.c:28)
==191==    by 0x4023E2: evaluate_hand (eval.c:310)
==191==    by 0x401DA7: compare_hands (eval.c:154)
==191==    by 0x402F2C: main (test-eval.c:124)
==191== 
==191== 
==191== HEAP SUMMARY:
==191==     in use at exit: 0 bytes in 0 blocks
==191==   total heap usage: 636 allocs, 636 frees, 21,404 bytes allocated
==191== 
==191== All heap blocks were freed -- no leaks are possible
==191== 
==191== For counts of detected and suppressed errors, rerun with: -v
==191== Use --track-origins=yes to see where uninitialised values come from
==191== ERROR SUMMARY: 72 errors from 6 contexts (suppressed: 0 from 0)
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==196== Memcheck, a memory error detector
==196== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==196== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==196== Command: ./test-eval inp.8.txt
==196== Parent PID: 195
==196== 
==196== Conditional jump or move depends on uninitialised value(s)
==196==    at 0x40151A: flush_suit (eval.c:28)
==196==    by 0x402A5F: describe_hand (test-eval.c:36)
==196==    by 0x402EB7: main (test-eval.c:116)
==196== 
==196== Conditional jump or move depends on uninitialised value(s)
==196==    at 0x40151A: flush_suit (eval.c:28)
==196==    by 0x4023E2: evaluate_hand (eval.c:310)
==196==    by 0x402C8C: describe_hand (test-eval.c:68)
==196==    by 0x402EB7: main (test-eval.c:116)
==196== 
==196== Conditional jump or move depends on uninitialised value(s)
==196==    at 0x40151A: flush_suit (eval.c:28)
==196==    by 0x402A5F: describe_hand (test-eval.c:36)
==196==    by 0x402ED7: main (test-eval.c:119)
==196== 
==196== Conditional jump or move depends on uninitialised value(s)
==196==    at 0x40151A: flush_suit (eval.c:28)
==196==    by 0x4023E2: evaluate_hand (eval.c:310)
==196==    by 0x402C8C: describe_hand (test-eval.c:68)
==196==    by 0x402ED7: main (test-eval.c:119)
==196== 
==196== Conditional jump or move depends on uninitialised value(s)
==196==    at 0x40151A: flush_suit (eval.c:28)
==196==    by 0x4023E2: evaluate_hand (eval.c:310)
==196==    by 0x401D4C: compare_hands (eval.c:153)
==196==    by 0x402F2C: main (test-eval.c:124)
==196== 
==196== Conditional jump or move depends on uninitialised value(s)
==196==    at 0x40151A: flush_suit (eval.c:28)
==196==    by 0x4023E2: evaluate_hand (eval.c:310)
==196==    by 0x401DA7: compare_hands (eval.c:154)
==196==    by 0x402F2C: main (test-eval.c:124)
==196== 
==196== 
==196== HEAP SUMMARY:
==196==     in use at exit: 0 bytes in 0 blocks
==196==   total heap usage: 352 allocs, 352 frees, 15,296 bytes allocated
==196== 
==196== All heap blocks were freed -- no leaks are possible
==196== 
==196== For counts of detected and suppressed errors, rerun with: -v
==196== Use --track-origins=yes to see where uninitialised values come from
==196== ERROR SUMMARY: 50 errors from 6 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
 Checking the output 
Line_51_did_not_match
Line_54_did_not_match
Line_57_did_not_match
Line_61_did_not_match
Line_64_did_not_match
Line_67_did_not_match
Line_79_did_not_match
Line_80_did_not_match
Line_85_did_not_match
Line_90_did_not_match
Line_93_did_not_match
Line_108_did_not_match
Line_111_did_not_match
Line_112_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 							As Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 							Kh Qh Jh 0h 9h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 9s 8s 						As Ks Qs Js 0s 9s 8s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 8h 7h 						Kh Qh Jh 0h 9h 8h 7h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Kc Ks Qs Js 0s 					      |	As Ac Ks Kc Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0						 - Straight at index 0
 - Straight flush at index 1				      |	 - Straight at index 1
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Ad Kh Qh Jh Js 0h 9h 					      |	Ad Kh Qh Js Jh 0h 9h 
 - Flush in suit h						 - Flush in suit h
 - Straight at index 0						 - Straight at index 0
 - Straight flush at index 1				      |	 - Straight at index 1
 - The most of a kind is 2 of a kind (at index 3 / value J)	 - The most of a kind is 2 of a kind (at index 3 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Kc 5h 4h 3h 2h 						Ah Kc 5h 4h 3h 2h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0				      <
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: 5h 4h 3h 2h Ah 		      |	 - 5 cards used for hand: Ah 5h 4h 3h 2h 
Hand 2:								Hand 2:
--------							--------
Ac 6c 5c 4c 3c 2c 						Ac 6c 5c 4c 3c 2c 
 - Flush in suit c						 - Flush in suit c
 - Straight flush at index 0				      |	 - Straight at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: 5c 4c 3c 2c Ac 		      |	 - 5 cards used for hand: 6c 5c 4c 3c 2c 
Comparison : 							Comparison : 
--------------							--------------
Tie							      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 							As Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
As 5s 4s 3s 2s 							As 5s 4s 3s 2s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0				      |	 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: 5s 4s 3s 2s As 		      |	 - 5 cards used for hand: As 5s 4s 3s 2s 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==214== Memcheck, a memory error detector
==214== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==214== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==214== Command: ./test-eval inp.10.txt
==214== Parent PID: 213
==214== 
==214== Conditional jump or move depends on uninitialised value(s)
==214==    at 0x40151A: flush_suit (eval.c:28)
==214==    by 0x402A5F: describe_hand (test-eval.c:36)
==214==    by 0x402ED7: main (test-eval.c:119)
==214== 
==214== Conditional jump or move depends on uninitialised value(s)
==214==    at 0x40151A: flush_suit (eval.c:28)
==214==    by 0x4023E2: evaluate_hand (eval.c:310)
==214==    by 0x402C8C: describe_hand (test-eval.c:68)
==214==    by 0x402ED7: main (test-eval.c:119)
==214== 
==214== Conditional jump or move depends on uninitialised value(s)
==214==    at 0x40151A: flush_suit (eval.c:28)
==214==    by 0x4023E2: evaluate_hand (eval.c:310)
==214==    by 0x401DA7: compare_hands (eval.c:154)
==214==    by 0x402F2C: main (test-eval.c:124)
==214== 
==214== Conditional jump or move depends on uninitialised value(s)
==214==    at 0x40151A: flush_suit (eval.c:28)
==214==    by 0x402A5F: describe_hand (test-eval.c:36)
==214==    by 0x402EB7: main (test-eval.c:116)
==214== 
==214== Conditional jump or move depends on uninitialised value(s)
==214==    at 0x40151A: flush_suit (eval.c:28)
==214==    by 0x4023E2: evaluate_hand (eval.c:310)
==214==    by 0x402C8C: describe_hand (test-eval.c:68)
==214==    by 0x402EB7: main (test-eval.c:116)
==214== 
==214== Conditional jump or move depends on uninitialised value(s)
==214==    at 0x40151A: flush_suit (eval.c:28)
==214==    by 0x4023E2: evaluate_hand (eval.c:310)
==214==    by 0x401D4C: compare_hands (eval.c:153)
==214==    by 0x402F2C: main (test-eval.c:124)
==214== 
==214== 
==214== HEAP SUMMARY:
==214==     in use at exit: 0 bytes in 0 blocks
==214==   total heap usage: 3,988 allocs, 3,988 frees, 80,704 bytes allocated
==214== 
==214== All heap blocks were freed -- no leaks are possible
==214== 
==214== For counts of detected and suppressed errors, rerun with: -v
==214== Use --track-origins=yes to see where uninitialised values come from
==214== ERROR SUMMARY: 393 errors from 6 contexts (suppressed: 0 from 0)

Overall Grade: F
