Grading at Fri Jul  3 10:58:21 UTC 2020
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==365== Memcheck, a memory error detector
==365== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==365== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==365== Command: ./test-eval inp.1.txt
==365== Parent PID: 364
==365== 
==365== Conditional jump or move depends on uninitialised value(s)
==365==    at 0x401539: flush_suit (eval.c:31)
==365==    by 0x402A7E: describe_hand (test-eval.c:36)
==365==    by 0x402ED6: main (test-eval.c:116)
==365== 
==365== Conditional jump or move depends on uninitialised value(s)
==365==    at 0x401539: flush_suit (eval.c:31)
==365==    by 0x402401: evaluate_hand (eval.c:313)
==365==    by 0x402CAB: describe_hand (test-eval.c:68)
==365==    by 0x402ED6: main (test-eval.c:116)
==365== 
==365== Conditional jump or move depends on uninitialised value(s)
==365==    at 0x401539: flush_suit (eval.c:31)
==365==    by 0x402A7E: describe_hand (test-eval.c:36)
==365==    by 0x402EF6: main (test-eval.c:119)
==365== 
==365== Conditional jump or move depends on uninitialised value(s)
==365==    at 0x401539: flush_suit (eval.c:31)
==365==    by 0x402401: evaluate_hand (eval.c:313)
==365==    by 0x402CAB: describe_hand (test-eval.c:68)
==365==    by 0x402EF6: main (test-eval.c:119)
==365== 
==365== Conditional jump or move depends on uninitialised value(s)
==365==    at 0x401539: flush_suit (eval.c:31)
==365==    by 0x402401: evaluate_hand (eval.c:313)
==365==    by 0x401D6B: compare_hands (eval.c:156)
==365==    by 0x402F4B: main (test-eval.c:124)
==365== 
==365== Conditional jump or move depends on uninitialised value(s)
==365==    at 0x401539: flush_suit (eval.c:31)
==365==    by 0x402401: evaluate_hand (eval.c:313)
==365==    by 0x401DC6: compare_hands (eval.c:157)
==365==    by 0x402F4B: main (test-eval.c:124)
==365== 
==365== 
==365== HEAP SUMMARY:
==365==     in use at exit: 0 bytes in 0 blocks
==365==   total heap usage: 278 allocs, 278 frees, 13,728 bytes allocated
==365== 
==365== All heap blocks were freed -- no leaks are possible
==365== 
==365== For counts of detected and suppressed errors, rerun with: -v
==365== Use --track-origins=yes to see where uninitialised values come from
==365== ERROR SUMMARY: 38 errors from 6 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
Valgrind returned an error status
==370== Memcheck, a memory error detector
==370== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==370== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==370== Command: ./test-eval inp.2.txt
==370== Parent PID: 369
==370== 
==370== Conditional jump or move depends on uninitialised value(s)
==370==    at 0x401539: flush_suit (eval.c:31)
==370==    by 0x402A7E: describe_hand (test-eval.c:36)
==370==    by 0x402ED6: main (test-eval.c:116)
==370== 
==370== Conditional jump or move depends on uninitialised value(s)
==370==    at 0x401539: flush_suit (eval.c:31)
==370==    by 0x402401: evaluate_hand (eval.c:313)
==370==    by 0x402CAB: describe_hand (test-eval.c:68)
==370==    by 0x402ED6: main (test-eval.c:116)
==370== 
==370== Conditional jump or move depends on uninitialised value(s)
==370==    at 0x401539: flush_suit (eval.c:31)
==370==    by 0x402A7E: describe_hand (test-eval.c:36)
==370==    by 0x402EF6: main (test-eval.c:119)
==370== 
==370== Conditional jump or move depends on uninitialised value(s)
==370==    at 0x401539: flush_suit (eval.c:31)
==370==    by 0x402401: evaluate_hand (eval.c:313)
==370==    by 0x402CAB: describe_hand (test-eval.c:68)
==370==    by 0x402EF6: main (test-eval.c:119)
==370== 
==370== Conditional jump or move depends on uninitialised value(s)
==370==    at 0x401539: flush_suit (eval.c:31)
==370==    by 0x402401: evaluate_hand (eval.c:313)
==370==    by 0x401D6B: compare_hands (eval.c:156)
==370==    by 0x402F4B: main (test-eval.c:124)
==370== 
==370== Conditional jump or move depends on uninitialised value(s)
==370==    at 0x401539: flush_suit (eval.c:31)
==370==    by 0x402401: evaluate_hand (eval.c:313)
==370==    by 0x401DC6: compare_hands (eval.c:157)
==370==    by 0x402F4B: main (test-eval.c:124)
==370== 
==370== 
==370== HEAP SUMMARY:
==370==     in use at exit: 0 bytes in 0 blocks
==370==   total heap usage: 232 allocs, 232 frees, 13,028 bytes allocated
==370== 
==370== All heap blocks were freed -- no leaks are possible
==370== 
==370== For counts of detected and suppressed errors, rerun with: -v
==370== Use --track-origins=yes to see where uninitialised values come from
==370== ERROR SUMMARY: 32 errors from 6 contexts (suppressed: 0 from 0)
Testcase 3: Trying hands with 2 pairs
Valgrind returned an error status
==375== Memcheck, a memory error detector
==375== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==375== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==375== Command: ./test-eval inp.3.txt
==375== Parent PID: 374
==375== 
==375== Conditional jump or move depends on uninitialised value(s)
==375==    at 0x401539: flush_suit (eval.c:31)
==375==    by 0x402A7E: describe_hand (test-eval.c:36)
==375==    by 0x402ED6: main (test-eval.c:116)
==375== 
==375== Conditional jump or move depends on uninitialised value(s)
==375==    at 0x401539: flush_suit (eval.c:31)
==375==    by 0x402401: evaluate_hand (eval.c:313)
==375==    by 0x402CAB: describe_hand (test-eval.c:68)
==375==    by 0x402ED6: main (test-eval.c:116)
==375== 
==375== Conditional jump or move depends on uninitialised value(s)
==375==    at 0x401539: flush_suit (eval.c:31)
==375==    by 0x402A7E: describe_hand (test-eval.c:36)
==375==    by 0x402EF6: main (test-eval.c:119)
==375== 
==375== Conditional jump or move depends on uninitialised value(s)
==375==    at 0x401539: flush_suit (eval.c:31)
==375==    by 0x402401: evaluate_hand (eval.c:313)
==375==    by 0x402CAB: describe_hand (test-eval.c:68)
==375==    by 0x402EF6: main (test-eval.c:119)
==375== 
==375== Conditional jump or move depends on uninitialised value(s)
==375==    at 0x401539: flush_suit (eval.c:31)
==375==    by 0x402401: evaluate_hand (eval.c:313)
==375==    by 0x401D6B: compare_hands (eval.c:156)
==375==    by 0x402F4B: main (test-eval.c:124)
==375== 
==375== Conditional jump or move depends on uninitialised value(s)
==375==    at 0x401539: flush_suit (eval.c:31)
==375==    by 0x402401: evaluate_hand (eval.c:313)
==375==    by 0x401DC6: compare_hands (eval.c:157)
==375==    by 0x402F4B: main (test-eval.c:124)
==375== 
==375== 
==375== HEAP SUMMARY:
==375==     in use at exit: 0 bytes in 0 blocks
==375==   total heap usage: 544 allocs, 544 frees, 18,344 bytes allocated
==375== 
==375== All heap blocks were freed -- no leaks are possible
==375== 
==375== For counts of detected and suppressed errors, rerun with: -v
==375== Use --track-origins=yes to see where uninitialised values come from
==375== ERROR SUMMARY: 67 errors from 6 contexts (suppressed: 0 from 0)
Testcase 4: Trying hands with 3 of a kind
Valgrind returned an error status
==380== Memcheck, a memory error detector
==380== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==380== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==380== Command: ./test-eval inp.4.txt
==380== Parent PID: 379
==380== 
==380== Conditional jump or move depends on uninitialised value(s)
==380==    at 0x401539: flush_suit (eval.c:31)
==380==    by 0x402A7E: describe_hand (test-eval.c:36)
==380==    by 0x402ED6: main (test-eval.c:116)
==380== 
==380== Conditional jump or move depends on uninitialised value(s)
==380==    at 0x401539: flush_suit (eval.c:31)
==380==    by 0x402401: evaluate_hand (eval.c:313)
==380==    by 0x402CAB: describe_hand (test-eval.c:68)
==380==    by 0x402ED6: main (test-eval.c:116)
==380== 
==380== Conditional jump or move depends on uninitialised value(s)
==380==    at 0x401539: flush_suit (eval.c:31)
==380==    by 0x402A7E: describe_hand (test-eval.c:36)
==380==    by 0x402EF6: main (test-eval.c:119)
==380== 
==380== Conditional jump or move depends on uninitialised value(s)
==380==    at 0x401539: flush_suit (eval.c:31)
==380==    by 0x402401: evaluate_hand (eval.c:313)
==380==    by 0x402CAB: describe_hand (test-eval.c:68)
==380==    by 0x402EF6: main (test-eval.c:119)
==380== 
==380== Conditional jump or move depends on uninitialised value(s)
==380==    at 0x401539: flush_suit (eval.c:31)
==380==    by 0x402401: evaluate_hand (eval.c:313)
==380==    by 0x401D6B: compare_hands (eval.c:156)
==380==    by 0x402F4B: main (test-eval.c:124)
==380== 
==380== Conditional jump or move depends on uninitialised value(s)
==380==    at 0x401539: flush_suit (eval.c:31)
==380==    by 0x402401: evaluate_hand (eval.c:313)
==380==    by 0x401DC6: compare_hands (eval.c:157)
==380==    by 0x402F4B: main (test-eval.c:124)
==380== 
==380== 
==380== HEAP SUMMARY:
==380==     in use at exit: 0 bytes in 0 blocks
==380==   total heap usage: 352 allocs, 352 frees, 15,296 bytes allocated
==380== 
==380== All heap blocks were freed -- no leaks are possible
==380== 
==380== For counts of detected and suppressed errors, rerun with: -v
==380== Use --track-origins=yes to see where uninitialised values come from
==380== ERROR SUMMARY: 50 errors from 6 contexts (suppressed: 0 from 0)
Testcase 5: Trying hands with straights
Valgrind returned an error status
==385== Memcheck, a memory error detector
==385== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==385== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==385== Command: ./test-eval inp.5.txt
==385== Parent PID: 384
==385== 
==385== Conditional jump or move depends on uninitialised value(s)
==385==    at 0x401539: flush_suit (eval.c:31)
==385==    by 0x402A7E: describe_hand (test-eval.c:36)
==385==    by 0x402ED6: main (test-eval.c:116)
==385== 
==385== Conditional jump or move depends on uninitialised value(s)
==385==    at 0x401539: flush_suit (eval.c:31)
==385==    by 0x402401: evaluate_hand (eval.c:313)
==385==    by 0x402CAB: describe_hand (test-eval.c:68)
==385==    by 0x402ED6: main (test-eval.c:116)
==385== 
==385== Conditional jump or move depends on uninitialised value(s)
==385==    at 0x401539: flush_suit (eval.c:31)
==385==    by 0x402A7E: describe_hand (test-eval.c:36)
==385==    by 0x402EF6: main (test-eval.c:119)
==385== 
==385== Conditional jump or move depends on uninitialised value(s)
==385==    at 0x401539: flush_suit (eval.c:31)
==385==    by 0x402401: evaluate_hand (eval.c:313)
==385==    by 0x402CAB: describe_hand (test-eval.c:68)
==385==    by 0x402EF6: main (test-eval.c:119)
==385== 
==385== Conditional jump or move depends on uninitialised value(s)
==385==    at 0x401539: flush_suit (eval.c:31)
==385==    by 0x402401: evaluate_hand (eval.c:313)
==385==    by 0x401D6B: compare_hands (eval.c:156)
==385==    by 0x402F4B: main (test-eval.c:124)
==385== 
==385== Conditional jump or move depends on uninitialised value(s)
==385==    at 0x401539: flush_suit (eval.c:31)
==385==    by 0x402401: evaluate_hand (eval.c:313)
==385==    by 0x401DC6: compare_hands (eval.c:157)
==385==    by 0x402F4B: main (test-eval.c:124)
==385== 
==385== 
==385== HEAP SUMMARY:
==385==     in use at exit: 0 bytes in 0 blocks
==385==   total heap usage: 360 allocs, 360 frees, 15,704 bytes allocated
==385== 
==385== All heap blocks were freed -- no leaks are possible
==385== 
==385== For counts of detected and suppressed errors, rerun with: -v
==385== Use --track-origins=yes to see where uninitialised values come from
==385== ERROR SUMMARY: 41 errors from 6 contexts (suppressed: 0 from 0)
Testcase 6: Trying hands with flushes
 Checking the output 
Line_65_did_not_match
Line_73_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
As Kc Qs Js 0s 2s 						As Kc Qs Js 0s 2s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs Js 0s 2s 			 - 5 cards used for hand: As Qs Js 0s 2s 
Hand 2:								Hand 2:
--------							--------
As Ks Qc Js 0s 3s 						As Ks Qc Js 0s 3s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0						 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Ks Js 0s 3s 			 - 5 cards used for hand: As Ks Js 0s 3s 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kh Jh 9h 8s 4h 2h 						Kh Jh 9h 8s 4h 2h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kh Jh 9h 4h 2h 			 - 5 cards used for hand: Kh Jh 9h 4h 2h 
Hand 2:								Hand 2:
--------							--------
Qd 9d 7d 6c 5d 2d 						Qd 9d 7d 6c 5d 2d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value Q)	 - The most of a kind is 1 of a kind (at index 0 / value Q)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Qd 9d 7d 5d 2d 			 - 5 cards used for hand: Qd 9d 7d 5d 2d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Kc Jc 9c 7h 4c 3c 2h 						Kc Jc 9c 7h 4c 3c 2h 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kc Jc 9c 4c 3c 			 - 5 cards used for hand: Kc Jc 9c 4c 3c 
Hand 2:								Hand 2:
--------							--------
Kc Jc 9c 7h 4c 3h 2c 						Kc Jc 9c 7h 4c 3h 2c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kc Jc 9c 4c 2c 			 - 5 cards used for hand: Kc Jc 9c 4c 2c 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Qc Qs 7s 6s 3s 					      |	As Ac Qs Qc 7s 6s 3s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value Q)				 - Secondary pair at index 2 (value Q)
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs 7s 6s 3s 			 - 5 cards used for hand: As Qs 7s 6s 3s 
Hand 2:								Hand 2:
--------							--------
Kc Kh Ks 9h 7h 3h 2h 					      |	Ks Kh Kc 9h 7h 3h 2h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 3 of a kind (at index 0 / value K)	 - The most of a kind is 3 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kh 9h 7h 3h 2h 			 - 5 cards used for hand: Kh 9h 7h 3h 2h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 2h 						Ah Qh 0h 8h 6h 4h 2h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Kh Qh 0h 8h 6h 4h 2h 						Kh Qh 0h 8h 6h 4h 2h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kh Qh 0h 8h 6h 			 - 5 cards used for hand: Kh Qh 0h 8h 6h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ad Qd 0d 8d 6d 4d 						Ad Qd 0d 8d 6d 4d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ad Qd 0d 8d 6d 			 - 5 cards used for hand: Ad Qd 0d 8d 6d 
Hand 2:								Hand 2:
--------							--------
Ad Kd 0d 8d 6d 4d 						Ad Kd 0d 8d 6d 4d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ad Kd 0d 8d 6d 			 - 5 cards used for hand: Ad Kd 0d 8d 6d 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ad Qd 0d 8d 6d 4d 						Ad Qd 0d 8d 6d 4d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ad Qd 0d 8d 6d 			 - 5 cards used for hand: Ad Qd 0d 8d 6d 
Hand 2:								Hand 2:
--------							--------
Ad Jd 0d 8d 6d 4d 						Ad Jd 0d 8d 6d 4d 
 - Flush in suit d						 - Flush in suit d
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ad Jd 0d 8d 6d 			 - 5 cards used for hand: Ad Jd 0d 8d 6d 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Qs 0s 8s 6s 4s 						As Qs 0s 8s 6s 4s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs 0s 8s 6s 			 - 5 cards used for hand: As Qs 0s 8s 6s 
Hand 2:								Hand 2:
--------							--------
As Qs Js 8s 6s 4s 						As Qs Js 8s 6s 4s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs Js 8s 6s 			 - 5 cards used for hand: As Qs Js 8s 6s 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Qs 0s 8s 6s 4s 						As Qs 0s 8s 6s 4s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs 0s 8s 6s 			 - 5 cards used for hand: As Qs 0s 8s 6s 
Hand 2:								Hand 2:
--------							--------
As Qs 9s 8s 6s 4s 						As Qs 9s 8s 6s 4s 
 - Flush in suit s						 - Flush in suit s
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Qs 9s 8s 6s 			 - 5 cards used for hand: As Qs 9s 8s 6s 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac Qc 0c 8c 6c 4c 						Ac Qc 0c 8c 6c 4c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ac Qc 0c 8c 6c 			 - 5 cards used for hand: Ac Qc 0c 8c 6c 
Hand 2:								Hand 2:
--------							--------
Ac Qc 0c 9c 6c 4c 						Ac Qc 0c 9c 6c 4c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ac Qc 0c 9c 6c 			 - 5 cards used for hand: Ac Qc 0c 9c 6c 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac Qc 0c 8c 6c 4c 						Ac Qc 0c 8c 6c 4c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ac Qc 0c 8c 6c 			 - 5 cards used for hand: Ac Qc 0c 8c 6c 
Hand 2:								Hand 2:
--------							--------
Ac Qc 0c 7c 6c 4c 						Ac Qc 0c 7c 6c 4c 
 - Flush in suit c						 - Flush in suit c
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ac Qc 0c 7c 6c 			 - 5 cards used for hand: Ac Qc 0c 7c 6c 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 						Ah Qh 0h 8h 6h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Ah Qh 0h 8h 7h 4h 						Ah Qh 0h 8h 7h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 7h 			 - 5 cards used for hand: Ah Qh 0h 8h 7h 
Comparison : 							Comparison : 
--------------							--------------
Hand 2 wins!							Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 						Ah Qh 0h 8h 6h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Ah Qh 0h 8h 5h 4h 						Ah Qh 0h 8h 5h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 5h 			 - 5 cards used for hand: Ah Qh 0h 8h 5h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 						Ah Qh 0h 8h 6h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Ah Qh 0h 8h 6h 5h 						Ah Qh 0h 8h 6h 5h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Comparison : 							Comparison : 
--------------							--------------
Tie								Tie
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Qh 0h 8h 6h 4h 						Ah Qh 0h 8h 6h 4h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Hand 2:								Hand 2:
--------							--------
Ah Qh 0h 8h 6h 3h 						Ah Qh 0h 8h 6h 3h 
 - Flush in suit h						 - Flush in suit h
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: FLUSH				 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Ah Qh 0h 8h 6h 			 - 5 cards used for hand: Ah Qh 0h 8h 6h 
Comparison : 							Comparison : 
--------------							--------------
Tie								Tie
============================					============================
Testcase 7: Trying hands with full houses
Valgrind returned an error status
==403== Memcheck, a memory error detector
==403== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==403== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==403== Command: ./test-eval inp.7.txt
==403== Parent PID: 402
==403== 
==403== Conditional jump or move depends on uninitialised value(s)
==403==    at 0x401539: flush_suit (eval.c:31)
==403==    by 0x402A7E: describe_hand (test-eval.c:36)
==403==    by 0x402ED6: main (test-eval.c:116)
==403== 
==403== Conditional jump or move depends on uninitialised value(s)
==403==    at 0x401539: flush_suit (eval.c:31)
==403==    by 0x402401: evaluate_hand (eval.c:313)
==403==    by 0x402CAB: describe_hand (test-eval.c:68)
==403==    by 0x402ED6: main (test-eval.c:116)
==403== 
==403== Conditional jump or move depends on uninitialised value(s)
==403==    at 0x401539: flush_suit (eval.c:31)
==403==    by 0x402A7E: describe_hand (test-eval.c:36)
==403==    by 0x402EF6: main (test-eval.c:119)
==403== 
==403== Conditional jump or move depends on uninitialised value(s)
==403==    at 0x401539: flush_suit (eval.c:31)
==403==    by 0x402401: evaluate_hand (eval.c:313)
==403==    by 0x402CAB: describe_hand (test-eval.c:68)
==403==    by 0x402EF6: main (test-eval.c:119)
==403== 
==403== Conditional jump or move depends on uninitialised value(s)
==403==    at 0x401539: flush_suit (eval.c:31)
==403==    by 0x402401: evaluate_hand (eval.c:313)
==403==    by 0x401D6B: compare_hands (eval.c:156)
==403==    by 0x402F4B: main (test-eval.c:124)
==403== 
==403== Conditional jump or move depends on uninitialised value(s)
==403==    at 0x401539: flush_suit (eval.c:31)
==403==    by 0x402401: evaluate_hand (eval.c:313)
==403==    by 0x401DC6: compare_hands (eval.c:157)
==403==    by 0x402F4B: main (test-eval.c:124)
==403== 
==403== 
==403== HEAP SUMMARY:
==403==     in use at exit: 0 bytes in 0 blocks
==403==   total heap usage: 636 allocs, 636 frees, 21,404 bytes allocated
==403== 
==403== All heap blocks were freed -- no leaks are possible
==403== 
==403== For counts of detected and suppressed errors, rerun with: -v
==403== Use --track-origins=yes to see where uninitialised values come from
==403== ERROR SUMMARY: 72 errors from 6 contexts (suppressed: 0 from 0)
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==408== Memcheck, a memory error detector
==408== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==408== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==408== Command: ./test-eval inp.8.txt
==408== Parent PID: 407
==408== 
==408== Conditional jump or move depends on uninitialised value(s)
==408==    at 0x401539: flush_suit (eval.c:31)
==408==    by 0x402A7E: describe_hand (test-eval.c:36)
==408==    by 0x402ED6: main (test-eval.c:116)
==408== 
==408== Conditional jump or move depends on uninitialised value(s)
==408==    at 0x401539: flush_suit (eval.c:31)
==408==    by 0x402401: evaluate_hand (eval.c:313)
==408==    by 0x402CAB: describe_hand (test-eval.c:68)
==408==    by 0x402ED6: main (test-eval.c:116)
==408== 
==408== Conditional jump or move depends on uninitialised value(s)
==408==    at 0x401539: flush_suit (eval.c:31)
==408==    by 0x402A7E: describe_hand (test-eval.c:36)
==408==    by 0x402EF6: main (test-eval.c:119)
==408== 
==408== Conditional jump or move depends on uninitialised value(s)
==408==    at 0x401539: flush_suit (eval.c:31)
==408==    by 0x402401: evaluate_hand (eval.c:313)
==408==    by 0x402CAB: describe_hand (test-eval.c:68)
==408==    by 0x402EF6: main (test-eval.c:119)
==408== 
==408== Conditional jump or move depends on uninitialised value(s)
==408==    at 0x401539: flush_suit (eval.c:31)
==408==    by 0x402401: evaluate_hand (eval.c:313)
==408==    by 0x401D6B: compare_hands (eval.c:156)
==408==    by 0x402F4B: main (test-eval.c:124)
==408== 
==408== Conditional jump or move depends on uninitialised value(s)
==408==    at 0x401539: flush_suit (eval.c:31)
==408==    by 0x402401: evaluate_hand (eval.c:313)
==408==    by 0x401DC6: compare_hands (eval.c:157)
==408==    by 0x402F4B: main (test-eval.c:124)
==408== 
==408== 
==408== HEAP SUMMARY:
==408==     in use at exit: 0 bytes in 0 blocks
==408==   total heap usage: 352 allocs, 352 frees, 15,296 bytes allocated
==408== 
==408== All heap blocks were freed -- no leaks are possible
==408== 
==408== For counts of detected and suppressed errors, rerun with: -v
==408== Use --track-origins=yes to see where uninitialised values come from
==408== ERROR SUMMARY: 50 errors from 6 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
 Checking the output 
Line_51_did_not_match
Line_54_did_not_match
Line_57_did_not_match
Line_61_did_not_match
Line_64_did_not_match
Line_67_did_not_match
Line_79_did_not_match
Line_80_did_not_match
Line_85_did_not_match
Line_90_did_not_match
Line_93_did_not_match
Line_108_did_not_match
Line_111_did_not_match
Line_112_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 							As Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 							Kh Qh Jh 0h 9h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 9s 8s 						As Ks Qs Js 0s 9s 8s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 8h 7h 						Kh Qh Jh 0h 9h 8h 7h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Kc Ks Qs Js 0s 					      |	As Ac Ks Kc Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0						 - Straight at index 0
 - Straight flush at index 1				      |	 - Straight at index 1
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Ad Kh Qh Jh Js 0h 9h 					      |	Ad Kh Qh Js Jh 0h 9h 
 - Flush in suit h						 - Flush in suit h
 - Straight at index 0						 - Straight at index 0
 - Straight flush at index 1				      |	 - Straight at index 1
 - The most of a kind is 2 of a kind (at index 3 / value J)	 - The most of a kind is 2 of a kind (at index 3 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Kc 5h 4h 3h 2h 						Ah Kc 5h 4h 3h 2h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0				      <
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: 5h 4h 3h 2h Ah 		      |	 - 5 cards used for hand: Ah 5h 4h 3h 2h 
Hand 2:								Hand 2:
--------							--------
Ac 6c 5c 4c 3c 2c 						Ac 6c 5c 4c 3c 2c 
 - Flush in suit c						 - Flush in suit c
 - Straight flush at index 0				      |	 - Straight at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: 5c 4c 3c 2c Ac 		      |	 - 5 cards used for hand: 6c 5c 4c 3c 2c 
Comparison : 							Comparison : 
--------------							--------------
Tie							      |	Hand 2 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 							As Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
As 5s 4s 3s 2s 							As 5s 4s 3s 2s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0				      |	 - Straight at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: 5s 4s 3s 2s As 		      |	 - 5 cards used for hand: As 5s 4s 3s 2s 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==426== Memcheck, a memory error detector
==426== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==426== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==426== Command: ./test-eval inp.10.txt
==426== Parent PID: 425
==426== 
==426== Conditional jump or move depends on uninitialised value(s)
==426==    at 0x401539: flush_suit (eval.c:31)
==426==    by 0x402A7E: describe_hand (test-eval.c:36)
==426==    by 0x402EF6: main (test-eval.c:119)
==426== 
==426== Conditional jump or move depends on uninitialised value(s)
==426==    at 0x401539: flush_suit (eval.c:31)
==426==    by 0x402401: evaluate_hand (eval.c:313)
==426==    by 0x402CAB: describe_hand (test-eval.c:68)
==426==    by 0x402EF6: main (test-eval.c:119)
==426== 
==426== Conditional jump or move depends on uninitialised value(s)
==426==    at 0x401539: flush_suit (eval.c:31)
==426==    by 0x402401: evaluate_hand (eval.c:313)
==426==    by 0x401DC6: compare_hands (eval.c:157)
==426==    by 0x402F4B: main (test-eval.c:124)
==426== 
==426== Conditional jump or move depends on uninitialised value(s)
==426==    at 0x401539: flush_suit (eval.c:31)
==426==    by 0x402A7E: describe_hand (test-eval.c:36)
==426==    by 0x402ED6: main (test-eval.c:116)
==426== 
==426== Conditional jump or move depends on uninitialised value(s)
==426==    at 0x401539: flush_suit (eval.c:31)
==426==    by 0x402401: evaluate_hand (eval.c:313)
==426==    by 0x402CAB: describe_hand (test-eval.c:68)
==426==    by 0x402ED6: main (test-eval.c:116)
==426== 
==426== Conditional jump or move depends on uninitialised value(s)
==426==    at 0x401539: flush_suit (eval.c:31)
==426==    by 0x402401: evaluate_hand (eval.c:313)
==426==    by 0x401D6B: compare_hands (eval.c:156)
==426==    by 0x402F4B: main (test-eval.c:124)
==426== 
==426== 
==426== HEAP SUMMARY:
==426==     in use at exit: 0 bytes in 0 blocks
==426==   total heap usage: 3,988 allocs, 3,988 frees, 80,704 bytes allocated
==426== 
==426== All heap blocks were freed -- no leaks are possible
==426== 
==426== For counts of detected and suppressed errors, rerun with: -v
==426== Use --track-origins=yes to see where uninitialised values come from
==426== ERROR SUMMARY: 393 errors from 6 contexts (suppressed: 0 from 0)

Overall Grade: F
