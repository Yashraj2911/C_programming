Grading at Sun Aug  2 14:56:03 UTC 2020
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==1876== Memcheck, a memory error detector
==1876== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1876== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1876== Command: ./tester h.txt d.txt
==1876== Parent PID: 1875
==1876== 
==1876== Invalid read of size 8
==1876==    at 0x400CDD: read_input (in /graderhome/work/c4prj2_input/tester)
==1876==    by 0x401EC4: main (test-input.c:69)
==1876==  Address 0x52053b8 is 0 bytes after a block of size 8 alloc'd
==1876==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1876==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1876==    by 0x400B4A: read_input (in /graderhome/work/c4prj2_input/tester)
==1876==    by 0x401EC4: main (test-input.c:69)
==1876== 
==1876== Invalid read of size 8
==1876==    at 0x40151C: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==1876==    by 0x400CE7: read_input (in /graderhome/work/c4prj2_input/tester)
==1876==    by 0x401EC4: main (test-input.c:69)
==1876==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1876== 
==1876== 
==1876== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1876==  Access not within mapped region at address 0x8
==1876==    at 0x40151C: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==1876==    by 0x400CE7: read_input (in /graderhome/work/c4prj2_input/tester)
==1876==    by 0x401EC4: main (test-input.c:69)
==1876==  If you believe this happened as a result of a stack
==1876==  overflow in your program's main thread (unlikely but
==1876==  possible), you can try to increase the size of the
==1876==  main thread stack using the --main-stacksize= flag.
==1876==  The main thread stack size used in this run was 8388608.
==1876== 
==1876== HEAP SUMMARY:
==1876==     in use at exit: 792 bytes in 11 blocks
==1876==   total heap usage: 17 allocs, 6 frees, 5,008 bytes allocated
==1876== 
==1876== LEAK SUMMARY:
==1876==    definitely lost: 0 bytes in 0 blocks
==1876==    indirectly lost: 0 bytes in 0 blocks
==1876==      possibly lost: 0 bytes in 0 blocks
==1876==    still reachable: 792 bytes in 11 blocks
==1876==         suppressed: 0 bytes in 0 blocks
==1876== Rerun with --leak-check=full to see details of leaked memory
==1876== 
==1876== For counts of detected and suppressed errors, rerun with: -v
==1876== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==1882== Memcheck, a memory error detector
==1882== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1882== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1882== Command: ./tester i1 i2
==1882== Parent PID: 1881
==1882== 
==1882== Invalid read of size 8
==1882==    at 0x400CDD: read_input (in /graderhome/work/c4prj2_input/tester)
==1882==    by 0x401EC4: main (test-input.c:69)
==1882==  Address 0x52053d0 is 16 bytes after a block of size 16 in arena "client"
==1882== 
==1882== Invalid read of size 8
==1882==    at 0x40151C: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==1882==    by 0x400CE7: read_input (in /graderhome/work/c4prj2_input/tester)
==1882==    by 0x401EC4: main (test-input.c:69)
==1882==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==1882== 
==1882== 
==1882== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1882==  Access not within mapped region at address 0x8
==1882==    at 0x40151C: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==1882==    by 0x400CE7: read_input (in /graderhome/work/c4prj2_input/tester)
==1882==    by 0x401EC4: main (test-input.c:69)
==1882==  If you believe this happened as a result of a stack
==1882==  overflow in your program's main thread (unlikely but
==1882==  possible), you can try to increase the size of the
==1882==  main thread stack using the --main-stacksize= flag.
==1882==  The main thread stack size used in this run was 8388608.
==1882== 
==1882== HEAP SUMMARY:
==1882==     in use at exit: 744 bytes in 8 blocks
==1882==   total heap usage: 11 allocs, 3 frees, 4,864 bytes allocated
==1882== 
==1882== LEAK SUMMARY:
==1882==    definitely lost: 0 bytes in 0 blocks
==1882==    indirectly lost: 0 bytes in 0 blocks
==1882==      possibly lost: 0 bytes in 0 blocks
==1882==    still reachable: 744 bytes in 8 blocks
==1882==         suppressed: 0 bytes in 0 blocks
==1882== Rerun with --leak-check=full to see details of leaked memory
==1882== 
==1882== For counts of detected and suppressed errors, rerun with: -v
==1882== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: C
