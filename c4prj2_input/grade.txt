Grading at Sun Aug  2 15:09:49 UTC 2020
Compiling cards.c -> cards.o
Compiling deck.c -> deck.o
Compiling input.c -> input.o
Compiling future.c -> future.o
Linking input.o, future.o deck.o, cards.o, and our tester
Testing with input file with 
 o 1 hand
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o No unknown/future cards
Your file matched the expected output
Test case passed
Testing with input file with 
 o Many hands
 o 1 unknown/future cards per hand
Valgrind reported errors:
==2164== Memcheck, a memory error detector
==2164== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2164== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2164== Command: ./tester h.txt d.txt
==2164== Parent PID: 2163
==2164== 
==2164== Invalid read of size 8
==2164==    at 0x400CF3: read_input (in /graderhome/work/c4prj2_input/tester)
==2164==    by 0x401EDA: main (test-input.c:69)
==2164==  Address 0x52053b8 is 0 bytes after a block of size 8 alloc'd
==2164==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2164==    by 0x4C2FDEF: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==2164==    by 0x400B4A: read_input (in /graderhome/work/c4prj2_input/tester)
==2164==    by 0x401EDA: main (test-input.c:69)
==2164== 
==2164== Invalid read of size 8
==2164==    at 0x401532: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==2164==    by 0x400CFD: read_input (in /graderhome/work/c4prj2_input/tester)
==2164==    by 0x401EDA: main (test-input.c:69)
==2164==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2164== 
==2164== 
==2164== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2164==  Access not within mapped region at address 0x8
==2164==    at 0x401532: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==2164==    by 0x400CFD: read_input (in /graderhome/work/c4prj2_input/tester)
==2164==    by 0x401EDA: main (test-input.c:69)
==2164==  If you believe this happened as a result of a stack
==2164==  overflow in your program's main thread (unlikely but
==2164==  possible), you can try to increase the size of the
==2164==  main thread stack using the --main-stacksize= flag.
==2164==  The main thread stack size used in this run was 8388608.
==2164== 
==2164== HEAP SUMMARY:
==2164==     in use at exit: 792 bytes in 11 blocks
==2164==   total heap usage: 18 allocs, 7 frees, 9,104 bytes allocated
==2164== 
==2164== LEAK SUMMARY:
==2164==    definitely lost: 0 bytes in 0 blocks
==2164==    indirectly lost: 0 bytes in 0 blocks
==2164==      possibly lost: 0 bytes in 0 blocks
==2164==    still reachable: 792 bytes in 11 blocks
==2164==         suppressed: 0 bytes in 0 blocks
==2164== Rerun with --leak-check=full to see details of leaked memory
==2164== 
==2164== For counts of detected and suppressed errors, rerun with: -v
==2164== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing with input file with 
 o Many hands
 o Many unknown/future cards per hand
Valgrind reported errors:
==2170== Memcheck, a memory error detector
==2170== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2170== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2170== Command: ./tester i1 i2
==2170== Parent PID: 2169
==2170== 
==2170== Invalid read of size 8
==2170==    at 0x400CF3: read_input (in /graderhome/work/c4prj2_input/tester)
==2170==    by 0x401EDA: main (test-input.c:69)
==2170==  Address 0x52053d0 is 16 bytes after a block of size 16 in arena "client"
==2170== 
==2170== Invalid read of size 8
==2170==    at 0x401532: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==2170==    by 0x400CFD: read_input (in /graderhome/work/c4prj2_input/tester)
==2170==    by 0x401EDA: main (test-input.c:69)
==2170==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==2170== 
==2170== 
==2170== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2170==  Access not within mapped region at address 0x8
==2170==    at 0x401532: add_empty_card (in /graderhome/work/c4prj2_input/tester)
==2170==    by 0x400CFD: read_input (in /graderhome/work/c4prj2_input/tester)
==2170==    by 0x401EDA: main (test-input.c:69)
==2170==  If you believe this happened as a result of a stack
==2170==  overflow in your program's main thread (unlikely but
==2170==  possible), you can try to increase the size of the
==2170==  main thread stack using the --main-stacksize= flag.
==2170==  The main thread stack size used in this run was 8388608.
==2170== 
==2170== HEAP SUMMARY:
==2170==     in use at exit: 744 bytes in 8 blocks
==2170==   total heap usage: 12 allocs, 4 frees, 8,960 bytes allocated
==2170== 
==2170== LEAK SUMMARY:
==2170==    definitely lost: 0 bytes in 0 blocks
==2170==    indirectly lost: 0 bytes in 0 blocks
==2170==      possibly lost: 0 bytes in 0 blocks
==2170==    still reachable: 744 bytes in 8 blocks
==2170==         suppressed: 0 bytes in 0 blocks
==2170== Rerun with --leak-check=full to see details of leaked memory
==2170== 
==2170== For counts of detected and suppressed errors, rerun with: -v
==2170== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Overall Grade: C
